/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mx.edu.utxicotepec.saborlocal.Vendedor;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import mx.edu.utxicotepec.saborlocal.Controllers.ClientesController;
import mx.edu.utxicotepec.saborlocal.Controllers.PedidoPersonalizadoController;
import mx.edu.utxicotepec.saborlocal.Model.PedidoPersonalizadoModel;

/**
 *
 * @author xidon
 */
public class FrmPedidoPer extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(FrmPedidoPer.class.getName());

    /**
     * Creates new form PedidoPersonalizado
     */
    public FrmPedidoPer() {
        initComponents();
        cargarTablaPedidosPersonalizados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnatras1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblpedidoper = new javax.swing.JTable();
        btneliminar = new javax.swing.JButton();
        btnbuscar = new javax.swing.JButton();
        btnmodificar = new javax.swing.JButton();
        btnguardar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 240, 217));
        jPanel1.setPreferredSize(new java.awt.Dimension(1440, 1024));

        jPanel2.setBackground(new java.awt.Color(185, 157, 179));
        jPanel2.setForeground(new java.awt.Color(185, 157, 179));
        jPanel2.setPreferredSize(new java.awt.Dimension(1440, 100));

        jLabel1.setBackground(new java.awt.Color(255, 153, 153));
        jLabel1.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Pedidos");

        btnatras1.setBackground(new java.awt.Color(185, 157, 179));
        btnatras1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnatras1.setForeground(new java.awt.Color(255, 240, 217));
        btnatras1.setIcon(new javax.swing.ImageIcon("C:\\Users\\xidon\\Documents\\NetBeansProjects\\SaborLocal\\resources\\imgs\\Arrow 2.png")); // NOI18N
        btnatras1.setPreferredSize(new java.awt.Dimension(100, 100));
        btnatras1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnatras1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnatras1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(484, 484, 484)
                .addComponent(jLabel1)
                .addContainerGap(664, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnatras1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tblpedidoper.setBackground(new java.awt.Color(255, 255, 255));
        tblpedidoper.setForeground(new java.awt.Color(0, 0, 0));
        tblpedidoper.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "idPedidoPersonalizado", "Tipo de pan", "Sabor", "Cubierta", "Forma", "Tama√±o", "Decoracion", "Ocasion", "Estado"
            }
        ));
        jScrollPane2.setViewportView(tblpedidoper);

        btneliminar.setBackground(new java.awt.Color(255, 255, 255));
        btneliminar.setIcon(new javax.swing.ImageIcon("C:\\Users\\xidon\\Documents\\NetBeansProjects\\SaborLocal\\resources\\imgs\\Eliminar.png")); // NOI18N
        btneliminar.setOpaque(true);
        btneliminar.setPreferredSize(new java.awt.Dimension(125, 125));
        btneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminarActionPerformed(evt);
            }
        });

        btnbuscar.setBackground(new java.awt.Color(255, 255, 255));
        btnbuscar.setIcon(new javax.swing.ImageIcon("C:\\Users\\xidon\\Documents\\NetBeansProjects\\SaborLocal\\resources\\imgs\\busqueda.png")); // NOI18N
        btnbuscar.setOpaque(true);
        btnbuscar.setPreferredSize(new java.awt.Dimension(125, 125));
        btnbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscarActionPerformed(evt);
            }
        });

        btnmodificar.setBackground(new java.awt.Color(255, 255, 255));
        btnmodificar.setIcon(new javax.swing.ImageIcon("C:\\Users\\xidon\\Documents\\NetBeansProjects\\SaborLocal\\resources\\imgs\\Editar.png")); // NOI18N
        btnmodificar.setOpaque(true);
        btnmodificar.setPreferredSize(new java.awt.Dimension(125, 125));
        btnmodificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmodificarActionPerformed(evt);
            }
        });

        btnguardar.setBackground(new java.awt.Color(255, 255, 255));
        btnguardar.setIcon(new javax.swing.ImageIcon("C:\\Users\\xidon\\Documents\\NetBeansProjects\\SaborLocal\\resources\\imgs\\guardar.png")); // NOI18N
        btnguardar.setOpaque(true);
        btnguardar.setPreferredSize(new java.awt.Dimension(125, 125));
        btnguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btneliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnguardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnmodificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(91, 91, 91)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1099, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnguardar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(btnmodificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(btnbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2))
                .addGap(33, 33, 33)
                .addComponent(btneliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 273, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnatras1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnatras1ActionPerformed
        // TODO add your handling code here:
        FrmPedidos frmmenu = new FrmPedidos();
        frmmenu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnatras1ActionPerformed

    private void btneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminarActionPerformed
        // TODO add your handling code here:
        eliminar();
    }//GEN-LAST:event_btneliminarActionPerformed

    private void btnbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscarActionPerformed
        // TODO add your handling code here:
        buscar();
    }//GEN-LAST:event_btnbuscarActionPerformed

    private void btnmodificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmodificarActionPerformed
        // TODO add your handling code here:
        modificar();
    }//GEN-LAST:event_btnmodificarActionPerformed

    private void btnguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguardarActionPerformed
        // TODO add your handling code here:
        guardar();
    }//GEN-LAST:event_btnguardarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new FrmPedidoPer().setVisible(true));
    }

// Carga los datos de los pedidos personalizados en la tabla
    private void cargarTablaPedidosPersonalizados() {
        DefaultTableModel modelo = (DefaultTableModel) tblpedidoper.getModel();
        modelo.setRowCount(0);
        List<PedidoPersonalizadoModel> pedidosPer = PedidoPersonalizadoController.mostrarPedidos();
        for (PedidoPersonalizadoModel pedidoPer : pedidosPer) {
            String nombreCliente = ClientesController.obtenerNombreClientePorId(pedidoPer.getIdCliente());

            // Convierte el valor num√©rico del tama√±o a su nombre
            String nombreTamanio = PedidoPersonalizadoController.obtenerNombreTamanioPorId(Double.parseDouble(pedidoPer.getTamanio()));

            modelo.addRow(new Object[]{
                pedidoPer.getIdPedido(),
                pedidoPer.getTipoPan(),
                pedidoPer.getSabor(),
                pedidoPer.getCubierta(),
                pedidoPer.getForma(),
                nombreTamanio,
                pedidoPer.getDecoracion(),
                pedidoPer.getOcasion(),
                pedidoPer.getIngredientes(),
                pedidoPer.getEstado(),
                nombreCliente
            });
        }
    }

    public void guardar() {
        if (tblpedidoper.isEditing()) {
            tblpedidoper.getCellEditor().stopCellEditing();
        }
        DefaultTableModel modeloTabla = (DefaultTableModel) tblpedidoper.getModel();

        for (int i = 0; i < modeloTabla.getRowCount(); i++) {
            try {
                Object idValue = modeloTabla.getValueAt(i, 0);
                int idPedidoPer = (idValue != null && idValue.toString().matches("\\d+")) ? Integer.parseInt(idValue.toString()) : 0;
                String tipoPan = (modeloTabla.getValueAt(i, 1) != null) ? modeloTabla.getValueAt(i, 1).toString() : "";
                String sabor = (modeloTabla.getValueAt(i, 2) != null) ? modeloTabla.getValueAt(i, 2).toString() : "";
                String cubierta = (modeloTabla.getValueAt(i, 3) != null) ? modeloTabla.getValueAt(i, 3).toString() : "";
                String forma = (modeloTabla.getValueAt(i, 4) != null) ? modeloTabla.getValueAt(i, 4).toString() : "";
                String tamanio = (modeloTabla.getValueAt(i, 5) != null) ? modeloTabla.getValueAt(i, 5).toString() : "";
                String decoracion = (modeloTabla.getValueAt(i, 6) != null) ? modeloTabla.getValueAt(i, 6).toString() : "";
                String ocasion = (modeloTabla.getValueAt(i, 7) != null) ? modeloTabla.getValueAt(i, 7).toString() : "";
                String ingredientes = (modeloTabla.getValueAt(i, 8) != null) ? modeloTabla.getValueAt(i, 8).toString() : "";
                String estado = (modeloTabla.getValueAt(i, 9) != null) ? modeloTabla.getValueAt(i, 9).toString() : "";
                String cliente = (modeloTabla.getValueAt(i, 10) != null) ? modeloTabla.getValueAt(i, 10).toString() : "";

                int idCliente = PedidoPersonalizadoController.obtenerIdClientePorNombre(cliente);

                PedidoPersonalizadoModel pedidoPer = new PedidoPersonalizadoModel(idPedidoPer, idCliente, ocasion, tipoPan, sabor, cubierta, forma, tamanio, decoracion, ingredientes, estado);

                if (idPedidoPer <= 0) {
                    PedidoPersonalizadoController.guardarPedido(pedidoPer);
                } else {
                    PedidoPersonalizadoController.modificarPedido(pedidoPer);
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Error al procesar la fila de pedido personalizado " + (i + 1) + ": " + ex.getMessage());
            }
        }
        JOptionPane.showMessageDialog(this, "Cambios guardados exitosamente.");
        cargarTablaPedidosPersonalizados();
    }

    public void modificar() {
        int filaSeleccionada = tblpedidoper.getSelectedRow();
        if (filaSeleccionada != -1) {
            if (tblpedidoper.isEditing()) {
                tblpedidoper.getCellEditor().stopCellEditing();
            }
            try {
                int idPedidoPer = (int) tblpedidoper.getValueAt(filaSeleccionada, 0);
                String tipoPan = (String) tblpedidoper.getValueAt(filaSeleccionada, 1);
                String sabor = (String) tblpedidoper.getValueAt(filaSeleccionada, 2);
                String cubierta = (String) tblpedidoper.getValueAt(filaSeleccionada, 3);
                String forma = (String) tblpedidoper.getValueAt(filaSeleccionada, 4);
                String tamanio = (String) tblpedidoper.getValueAt(filaSeleccionada, 5);
                String decoracion = (String) tblpedidoper.getValueAt(filaSeleccionada, 6);
                String ocasion = (String) tblpedidoper.getValueAt(filaSeleccionada, 7);
                String ingredientes = (String) tblpedidoper.getValueAt(filaSeleccionada, 8);
                String estado = (String) tblpedidoper.getValueAt(filaSeleccionada, 9);
                String cliente = (String) tblpedidoper.getValueAt(filaSeleccionada, 10);

                int idCliente = PedidoPersonalizadoController.obtenerIdClientePorNombre(cliente);

                PedidoPersonalizadoModel pedidoPerModificado = new PedidoPersonalizadoModel(idPedidoPer, idCliente, ocasion, tipoPan, sabor, cubierta, forma, tamanio, decoracion, ingredientes, estado);

                if (PedidoPersonalizadoController.modificarPedido(pedidoPerModificado)) {
                    JOptionPane.showMessageDialog(this, "Pedido personalizado modificado exitosamente.");
                } else {
                    JOptionPane.showMessageDialog(this, "Error al modificar el pedido personalizado.");
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Error. Aseg√∫rese de que los datos del pedido personalizado son correctos.");
            }
            cargarTablaPedidosPersonalizados();
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una fila para modificar.");
        }
    }

    public void buscar() {
        String termino = JOptionPane.showInputDialog(this, "Ingrese el t√©rmino de b√∫squeda:");
        if (termino != null && !termino.trim().isEmpty()) {
            List<PedidoPersonalizadoModel> resultados = PedidoPersonalizadoController.buscarPedidosPorTermino(termino.trim());
            DefaultTableModel modeloTabla = (DefaultTableModel) tblpedidoper.getModel();
            modeloTabla.setRowCount(0);
            for (PedidoPersonalizadoModel pedidoPer : resultados) {

                String nombreCliente = ClientesController.obtenerNombreClientePorId(pedidoPer.getIdCliente());

                String nombreTamanio;

                try {
                    nombreTamanio = PedidoPersonalizadoController.obtenerNombreTamanioPorId(Double.parseDouble(pedidoPer.getTamanio()));
                } catch (NumberFormatException e) {
                    nombreTamanio = pedidoPer.getTamanio();
                }

                modeloTabla.addRow(new Object[]{
                    pedidoPer.getIdPedido(),
                    pedidoPer.getTipoPan(),
                    pedidoPer.getSabor(),
                    pedidoPer.getCubierta(),
                    pedidoPer.getForma(),
                    nombreTamanio,
                    pedidoPer.getDecoracion(),
                    pedidoPer.getOcasion(),
                    pedidoPer.getIngredientes(),
                    pedidoPer.getEstado(),
                    nombreCliente
                });
            }
        } else {
            cargarTablaPedidosPersonalizados();
        }
    }

    public void eliminar() {
        int filaSeleccionada = tblpedidoper.getSelectedRow();
        if (filaSeleccionada != -1) {
            int confirmacion = JOptionPane.showConfirmDialog(this, "¬øEst√° seguro de que desea eliminar este pedido personalizado?", "Confirmar Eliminaci√≥n", JOptionPane.YES_NO_OPTION);
            if (confirmacion == JOptionPane.YES_OPTION) {
                try {
                    int idPedidoPer = (int) tblpedidoper.getValueAt(filaSeleccionada, 0);
                    if (PedidoPersonalizadoController.eliminarPedido(idPedidoPer)) {
                        JOptionPane.showMessageDialog(this, "Pedido personalizado eliminado exitosamente.");
                        cargarTablaPedidosPersonalizados();
                    } else {
                        JOptionPane.showMessageDialog(this, "Error al eliminar el pedido personalizado.");
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Ocurri√≥ un error. No se pudo eliminar el pedido personalizado.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una fila para eliminar.");
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnatras1;
    private javax.swing.JButton btnbuscar;
    private javax.swing.JButton btneliminar;
    private javax.swing.JButton btnguardar;
    private javax.swing.JButton btnmodificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblpedidoper;
    // End of variables declaration//GEN-END:variables
}
