/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mx.edu.utxicotepec.saborlocal.Vendedor;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import mx.edu.utxicotepec.saborlocal.Controllers.PedidoController;
import mx.edu.utxicotepec.saborlocal.Model.PedidoModel;

/**
 *
 * @author xidon
 */
public class FrmPedidos extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(FrmPedidos.class.getName());

    /**
     * Creates new form FrmPedidos
     */
    public FrmPedidos() {
        initComponents();

        String[] columnas = {"idDetallePedido", "Pastel", "Tamanio", "Cliente", "Costo", "Mensaje", "Fecha de entrega", "Estado"};

        // Inicializa el modelo y lo asigna a la variable correcta
        DefaultTableModel modeloPedidos = new DefaultTableModel(null, columnas);

        // Asignar el modelo a tu JTable
        this.tblpedido.setModel(modeloPedidos);
        cargarTablaPedidos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnsiguiente = new javax.swing.JButton();
        btnatras2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblpedido = new javax.swing.JTable();
        btnguardar = new javax.swing.JButton();
        btnmodificar = new javax.swing.JButton();
        btnbuscar = new javax.swing.JButton();
        btneliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 240, 217));
        jPanel1.setPreferredSize(new java.awt.Dimension(1440, 1024));

        jPanel2.setBackground(new java.awt.Color(185, 157, 179));
        jPanel2.setForeground(new java.awt.Color(185, 157, 179));
        jPanel2.setPreferredSize(new java.awt.Dimension(1440, 100));

        jLabel1.setBackground(new java.awt.Color(255, 153, 153));
        jLabel1.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Pedidos");

        btnsiguiente.setBackground(new java.awt.Color(185, 157, 179));
        btnsiguiente.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnsiguiente.setForeground(new java.awt.Color(255, 240, 217));
        btnsiguiente.setIcon(new javax.swing.ImageIcon("C:\\Users\\xidon\\Documents\\NetBeansProjects\\SaborLocal\\resources\\imgs\\arrow-open-end-svgrepo-com 1.png")); // NOI18N
        btnsiguiente.setPreferredSize(new java.awt.Dimension(100, 100));
        btnsiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsiguienteActionPerformed(evt);
            }
        });

        btnatras2.setBackground(new java.awt.Color(185, 157, 179));
        btnatras2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnatras2.setForeground(new java.awt.Color(255, 240, 217));
        btnatras2.setIcon(new javax.swing.ImageIcon("C:\\Users\\xidon\\Documents\\NetBeansProjects\\SaborLocal\\resources\\imgs\\Arrow 2.png")); // NOI18N
        btnatras2.setPreferredSize(new java.awt.Dimension(100, 100));
        btnatras2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnatras2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnatras2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(484, 484, 484)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 550, Short.MAX_VALUE)
                .addComponent(btnsiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnsiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnatras2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        tblpedido.setBackground(new java.awt.Color(255, 255, 255));
        tblpedido.setForeground(new java.awt.Color(0, 0, 0));
        tblpedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "idPedido", "Pastel", "Tama√±o", "Cliente", "Mensaje", "Fecha de entrega", "Estado"
            }
        ));
        tblpedido.setPreferredSize(new java.awt.Dimension(1300, 500));
        jScrollPane1.setViewportView(tblpedido);

        btnguardar.setBackground(new java.awt.Color(255, 255, 255));
        btnguardar.setIcon(new javax.swing.ImageIcon("C:\\Users\\xidon\\Documents\\NetBeansProjects\\SaborLocal\\resources\\imgs\\guardar.png")); // NOI18N
        btnguardar.setOpaque(true);
        btnguardar.setPreferredSize(new java.awt.Dimension(125, 125));
        btnguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguardarActionPerformed(evt);
            }
        });

        btnmodificar.setBackground(new java.awt.Color(255, 255, 255));
        btnmodificar.setIcon(new javax.swing.ImageIcon("C:\\Users\\xidon\\Documents\\NetBeansProjects\\SaborLocal\\resources\\imgs\\Editar.png")); // NOI18N
        btnmodificar.setOpaque(true);
        btnmodificar.setPreferredSize(new java.awt.Dimension(125, 125));
        btnmodificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmodificarActionPerformed(evt);
            }
        });

        btnbuscar.setBackground(new java.awt.Color(255, 255, 255));
        btnbuscar.setIcon(new javax.swing.ImageIcon("C:\\Users\\xidon\\Documents\\NetBeansProjects\\SaborLocal\\resources\\imgs\\busqueda.png")); // NOI18N
        btnbuscar.setOpaque(true);
        btnbuscar.setPreferredSize(new java.awt.Dimension(125, 125));
        btnbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscarActionPerformed(evt);
            }
        });

        btneliminar.setBackground(new java.awt.Color(255, 255, 255));
        btneliminar.setIcon(new javax.swing.ImageIcon("C:\\Users\\xidon\\Documents\\NetBeansProjects\\SaborLocal\\resources\\imgs\\Eliminar.png")); // NOI18N
        btneliminar.setOpaque(true);
        btneliminar.setPreferredSize(new java.awt.Dimension(125, 125));
        btneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btneliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnguardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnmodificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(74, 74, 74)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnguardar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(btnmodificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(btnbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(btneliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 279, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnsiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsiguienteActionPerformed
        // TODO add your handling code here:
        FrmPedidoPer frmmenu = new FrmPedidoPer();
        frmmenu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnsiguienteActionPerformed

    private void btnguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguardarActionPerformed
        // TODO add your handling code here:
        guardar();
    }//GEN-LAST:event_btnguardarActionPerformed

    private void btnmodificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmodificarActionPerformed
        // TODO add your handling code here:
        modificar();
    }//GEN-LAST:event_btnmodificarActionPerformed

    private void btnbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscarActionPerformed
        // TODO add your handling code here:
        buscar();
    }//GEN-LAST:event_btnbuscarActionPerformed

    private void btneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminarActionPerformed
        // TODO add your handling code here:
        eliminar();
    }//GEN-LAST:event_btneliminarActionPerformed

    private void btnatras2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnatras2ActionPerformed
        // TODO add your handling code here:
        FrmMenuVendedor frmenuu = new FrmMenuVendedor();
        frmenuu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnatras2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new FrmPedidos().setVisible(true));
    }

    private void cargarTablaPedidos() {
        DefaultTableModel modelo = (DefaultTableModel) tblpedido.getModel();
        modelo.setRowCount(0);
        List<PedidoModel> pedidos = PedidoController.mostrarPedidos();
        for (PedidoModel pedido : pedidos) {
            modelo.addRow(new Object[]{
                pedido.getIdPedido(),
                pedido.getPastelSeleccionado(),
                pedido.getTamanioSeleccionado(),
                pedido.getNombreCliente(), // ‚úÖ directo
                pedido.getTotalPedido(), // ‚úÖ costo
                pedido.getMensaje(),
                pedido.getFechaEntregaEstimada(),
                pedido.getEstado()
            });
        }
    }

// L√≥gica para guardar o actualizar pedidos normales desde la tabla
    public void guardar() {
        if (tblpedido.isEditing()) {
            tblpedido.getCellEditor().stopCellEditing();
        }
        DefaultTableModel modeloTabla = (DefaultTableModel) tblpedido.getModel();

        for (int i = 0; i < modeloTabla.getRowCount(); i++) {
            try {
                Object idValue = modeloTabla.getValueAt(i, 0);
                int idPedido = (idValue != null && idValue.toString().matches("\\d+")) ? Integer.parseInt(idValue.toString()) : 0;
                String pastel = (modeloTabla.getValueAt(i, 1) != null) ? modeloTabla.getValueAt(i, 1).toString() : "";
                String tamano = (modeloTabla.getValueAt(i, 2) != null) ? modeloTabla.getValueAt(i, 2).toString() : "";
                String cliente = (modeloTabla.getValueAt(i, 3) != null) ? modeloTabla.getValueAt(i, 3).toString() : "";
                double costo = (modeloTabla.getValueAt(i, 4) != null) ? Double.parseDouble(modeloTabla.getValueAt(i, 4).toString()) : 0.0;
                String mensaje = (modeloTabla.getValueAt(i, 5) != null) ? modeloTabla.getValueAt(i, 5).toString() : "";
                String fechaEntrega = (modeloTabla.getValueAt(i, 6) != null) ? modeloTabla.getValueAt(i, 6).toString() : "";
                String estado = (modeloTabla.getValueAt(i, 7) != null) ? modeloTabla.getValueAt(i, 7).toString() : "";

                PedidoModel pedido = new PedidoModel(
                        idPedido,
                        pastel,
                        tamano,
                        cliente, // ‚úÖ usamos nombreCliente directo
                        costo,
                        mensaje,
                        fechaEntrega,
                        estado
                );

                if (idPedido <= 0) {
                    PedidoController.guardarPedido(pedido);
                } else {
                    PedidoController.modificarPedido(pedido);
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Error al procesar la fila de pedido " + (i + 1) + ": " + ex.getMessage());
            }
        }
        JOptionPane.showMessageDialog(this, "Cambios guardados exitosamente.");
        cargarTablaPedidos();
    }

// L√≥gica para modificar un pedido normal seleccionado
    public void modificar() {
        int filaSeleccionada = tblpedido.getSelectedRow();
        if (filaSeleccionada != -1) {
            if (tblpedido.isEditing()) {
                tblpedido.getCellEditor().stopCellEditing();
            }
            try {
                // Obtiene los datos de la fila de la tabla (esto est√° bien)
                int idPedido = (int) tblpedido.getValueAt(filaSeleccionada, 0);
                String pastel = (String) tblpedido.getValueAt(filaSeleccionada, 1);
                String tamano = (String) tblpedido.getValueAt(filaSeleccionada, 2);
                String nombreCliente = (String) tblpedido.getValueAt(filaSeleccionada, 3);
                double costo = Double.parseDouble(tblpedido.getValueAt(filaSeleccionada, 4).toString());
                String mensaje = (String) tblpedido.getValueAt(filaSeleccionada, 5);
                String fecha = (String) tblpedido.getValueAt(filaSeleccionada, 6);
                String estado = (String) tblpedido.getValueAt(filaSeleccionada, 7);

                // ‚úÖ L√ìGICA CORREGIDA: Obtiene el ID del cliente.
                int idCliente = PedidoController.obtenerIdClientePorNombre(nombreCliente);

                // ‚úÖ VERIFICA SI EL ID ES V√ÅLIDO ANTES DE CONTINUAR
                if (idCliente == -1) {
                    // Si la funci√≥n devuelve -1, significa que no encontr√≥ el cliente.
                    JOptionPane.showMessageDialog(this, "Error: El cliente '" + nombreCliente + "' no existe en la base de datos. Por favor, corrija el nombre del cliente.");
                    return; // Detiene la ejecuci√≥n aqu√≠ para evitar el error de la base de datos.
                }

                // El resto del c√≥digo solo se ejecuta si el ID del cliente es v√°lido
                java.util.Date fechaHoy = new java.util.Date();
                java.text.SimpleDateFormat formatoFecha = new java.text.SimpleDateFormat("yyyy-MM-dd");
                String fechaPedidoActual = formatoFecha.format(fechaHoy);

                PedidoModel pedidoModificado = new PedidoModel(
                        idPedido,
                        idCliente, // Este ID ya fue verificado
                        nombreCliente,
                        fechaPedidoActual,
                        estado,
                        costo,
                        mensaje,
                        fecha,
                        pastel,
                        tamano
                );

                if (PedidoController.modificarPedido(pedidoModificado)) {
                    JOptionPane.showMessageDialog(this, "Pedido modificado exitosamente.");
                    cargarTablaPedidos();
                } else {
                    JOptionPane.showMessageDialog(this, "Error al modificar el pedido. Verifique los datos.");
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Error de formato de n√∫mero. Aseg√∫rese de que el costo es un valor num√©rico v√°lido.");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Ocurri√≥ un error inesperado. Aseg√∫rese de que los datos son correctos.");
                System.err.println("Error en FrmPedidos.modificar(): " + ex.getMessage());
                ex.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una fila para modificar.");
        }
    }

    public void buscar() {
        String termino = JOptionPane.showInputDialog(this, "Ingrese el t√©rmino de b√∫squeda:");
        if (termino != null && !termino.trim().isEmpty()) {
            List<PedidoModel> resultados = PedidoController.buscarPedidosPorTermino(termino.trim());
            DefaultTableModel modeloTabla = (DefaultTableModel) tblpedido.getModel();
            modeloTabla.setRowCount(0);
            for (PedidoModel pedido : resultados) {
                modeloTabla.addRow(new Object[]{
                    pedido.getIdPedido(),
                    pedido.getPastelSeleccionado(),
                    pedido.getTamanioSeleccionado(),
                    pedido.getNombreCliente(),
                    pedido.getTotalPedido(),
                    pedido.getMensaje(),
                    pedido.getFechaEntregaEstimada(),
                    pedido.getEstado()
                });
            }
        } else {
            cargarTablaPedidos();
        }
    }

// L√≥gica para eliminar un pedido normal seleccionado
    public void eliminar() {
        int filaSeleccionada = tblpedido.getSelectedRow();
        if (filaSeleccionada != -1) {
            int confirmacion = JOptionPane.showConfirmDialog(this, "¬øEst√° seguro de que desea eliminar este pedido?", "Confirmar Eliminaci√≥n", JOptionPane.YES_NO_OPTION);
            if (confirmacion == JOptionPane.YES_OPTION) {
                try {
                    int idPedido = (int) tblpedido.getValueAt(filaSeleccionada, 0);
                    if (PedidoController.eliminarPedido(idPedido)) {
                        JOptionPane.showMessageDialog(this, "Pedido eliminado exitosamente.");
                        cargarTablaPedidos();
                    } else {
                        JOptionPane.showMessageDialog(this, "Error al eliminar el pedido.");
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Ocurri√≥ un error al eliminar el pedido.");
                    System.err.println("Error en eliminar(): " + ex.getMessage());
                    ex.printStackTrace();
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una fila para eliminar.");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnatras2;
    private javax.swing.JButton btnbuscar;
    private javax.swing.JButton btneliminar;
    private javax.swing.JButton btnguardar;
    private javax.swing.JButton btnmodificar;
    private javax.swing.JButton btnsiguiente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblpedido;
    // End of variables declaration//GEN-END:variables
}
