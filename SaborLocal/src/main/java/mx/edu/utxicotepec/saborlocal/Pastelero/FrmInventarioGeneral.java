/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mx.edu.utxicotepec.saborlocal.Pastelero;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import mx.edu.utxicotepec.saborlocal.Controllers.InventarioController;
import mx.edu.utxicotepec.saborlocal.Model.InventarioModel;
import mx.edu.utxicotepec.saborlocal.Pastelero.FrmMenuPastelero;

/**
 *
 * @author xidon
 */
public class FrmInventarioGeneral extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(FrmInventarioGeneral.class.getName());

    /**
     * Creates new form FrmInventarioGen
     */
    public FrmInventarioGeneral() {
        initComponents();
        cargarTablaInventario();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnatras = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblinventario = new javax.swing.JTable();
        btnguardar = new javax.swing.JButton();
        btnmodificar = new javax.swing.JButton();
        btnbuscar = new javax.swing.JButton();
        btnguardar1 = new javax.swing.JButton();
        btneliminar1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(147, 215, 164));
        jPanel1.setPreferredSize(new java.awt.Dimension(1440, 1024));

        jLabel1.setBackground(new java.awt.Color(85, 204, 119));
        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\xidon\\Documents\\NetBeansProjects\\SaborLocal\\resources\\imgs\\Ineven.png")); // NOI18N

        btnatras.setBackground(new java.awt.Color(255, 255, 255));
        btnatras.setIcon(new javax.swing.ImageIcon("C:\\Users\\xidon\\Documents\\NetBeansProjects\\SaborLocal\\resources\\imgs\\arrow-open-left-svgrepo-com 2.png")); // NOI18N
        btnatras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnatrasActionPerformed(evt);
            }
        });

        tblinventario.setBackground(new java.awt.Color(255, 255, 255));
        tblinventario.setForeground(new java.awt.Color(0, 0, 0));
        tblinventario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "idIngrediente", "Tipo", "Nombre", "Cantidad"
            }
        ));
        jScrollPane1.setViewportView(tblinventario);

        btnguardar.setForeground(new java.awt.Color(255, 255, 255));
        btnguardar.setIcon(new javax.swing.ImageIcon("C:\\Users\\xidon\\Documents\\NetBeansProjects\\SaborLocal\\resources\\imgs\\guardar.png")); // NOI18N
        btnguardar.setOpaque(true);
        btnguardar.setPreferredSize(new java.awt.Dimension(125, 125));
        btnguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguardarActionPerformed(evt);
            }
        });

        btnmodificar.setForeground(new java.awt.Color(255, 255, 255));
        btnmodificar.setIcon(new javax.swing.ImageIcon("C:\\Users\\xidon\\Documents\\NetBeansProjects\\SaborLocal\\resources\\imgs\\Editar.png")); // NOI18N
        btnmodificar.setOpaque(true);
        btnmodificar.setPreferredSize(new java.awt.Dimension(125, 125));
        btnmodificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmodificarActionPerformed(evt);
            }
        });

        btnbuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnbuscar.setIcon(new javax.swing.ImageIcon("C:\\Users\\xidon\\Documents\\NetBeansProjects\\SaborLocal\\resources\\imgs\\busqueda.png")); // NOI18N
        btnbuscar.setOpaque(true);
        btnbuscar.setPreferredSize(new java.awt.Dimension(125, 125));
        btnbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscarActionPerformed(evt);
            }
        });

        btnguardar1.setForeground(new java.awt.Color(255, 255, 255));
        btnguardar1.setIcon(new javax.swing.ImageIcon("C:\\Users\\xidon\\Documents\\NetBeansProjects\\SaborLocal\\resources\\imgs\\Agrgar.png")); // NOI18N
        btnguardar1.setOpaque(true);
        btnguardar1.setPreferredSize(new java.awt.Dimension(125, 125));
        btnguardar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguardar1ActionPerformed(evt);
            }
        });

        btneliminar1.setForeground(new java.awt.Color(255, 255, 255));
        btneliminar1.setIcon(new javax.swing.ImageIcon("C:\\Users\\xidon\\Documents\\NetBeansProjects\\SaborLocal\\resources\\imgs\\Eliminar.png")); // NOI18N
        btneliminar1.setOpaque(true);
        btneliminar1.setPreferredSize(new java.awt.Dimension(125, 125));
        btneliminar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnatras)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59)
                                .addComponent(btnguardar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btneliminar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(98, 98, 98)
                                .addComponent(btnguardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(94, 94, 94)
                                .addComponent(btnmodificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(96, 96, 96)
                                .addComponent(btnbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(132, 132, 132))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(btnatras))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(108, 108, 108)
                                .addComponent(jLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnbuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnmodificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnguardar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btneliminar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnguardar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(29, 29, 29)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(287, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnatrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnatrasActionPerformed
        // TODO add your handling code here:
        FrmMenuPastelero frmmp = new FrmMenuPastelero();
        frmmp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnatrasActionPerformed

    private void btnguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguardarActionPerformed
        // TODO add your handling code here:
        guardar();
    }//GEN-LAST:event_btnguardarActionPerformed

    private void btnmodificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmodificarActionPerformed
        // TODO add your handling code here:
        modificar();
    }//GEN-LAST:event_btnmodificarActionPerformed

    private void btnbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscarActionPerformed
        // TODO add your handling code here:
        buscar();
    }//GEN-LAST:event_btnbuscarActionPerformed

    private void btnguardar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguardar1ActionPerformed
        // TODO add your handling code here:
        agregar();
    }//GEN-LAST:event_btnguardar1ActionPerformed

    private void btneliminar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminar1ActionPerformed
        // TODO add your handling code here:
        eliminar();
    }//GEN-LAST:event_btneliminar1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new FrmInventarioGeneral().setVisible(true));
    }

    private void cargarTablaInventario() {
        DefaultTableModel modeloTabla = (DefaultTableModel) tblinventario.getModel();
        modeloTabla.setRowCount(0); // Limpia la tabla actual
        List<InventarioModel> lista = InventarioController.mostrarIngredientes();

        for (InventarioModel ingrediente : lista) {
            Object[] fila = {
                ingrediente.getIdIngrediente(),
                ingrediente.getIngrediente(),
                ingrediente.getTipoUso(),
                ingrediente.getCantidad()
            };
            modeloTabla.addRow(fila);
        }
    }

    public void guardar() {
        if (tblinventario.isEditing()) {
            tblinventario.getCellEditor().stopCellEditing();
        }
        DefaultTableModel modeloTabla = (DefaultTableModel) tblinventario.getModel();
        boolean exito = true;

        for (int i = modeloTabla.getRowCount() - 1; i >= 0; i--) {
            try {
                Object idValue = modeloTabla.getValueAt(i, 0);
                int idIngrediente = (idValue != null && idValue.toString().matches("\\d+")) ? Integer.parseInt(idValue.toString()) : 0;

                String ingrediente = (modeloTabla.getValueAt(i, 1) != null) ? modeloTabla.getValueAt(i, 1).toString() : "";
                String tipoUso = (modeloTabla.getValueAt(i, 2) != null) ? modeloTabla.getValueAt(i, 2).toString() : "";

                // Conversión de String a int para la cantidad
                String cantidadStr = (modeloTabla.getValueAt(i, 3) != null) ? modeloTabla.getValueAt(i, 3).toString() : "0";
                int cantidad = Integer.parseInt(cantidadStr);

                if (idIngrediente == 0 && ingrediente.isEmpty() && tipoUso.isEmpty() && cantidadStr.isEmpty()) {
                    modeloTabla.removeRow(i);
                    continue;
                }

                InventarioModel item = new InventarioModel(idIngrediente, ingrediente, tipoUso, cantidad);

                if (idIngrediente <= 0) {
                    InventarioController.guardarIngrediente(item);
                } else {
                    InventarioController.modificarIngrediente(item);
                }
            } catch (NumberFormatException e) {
                exito = false;
                JOptionPane.showMessageDialog(null, "Error: La cantidad de la fila " + (i + 1) + " debe ser un número entero.");
            } catch (Exception ex) {
                exito = false;
                JOptionPane.showMessageDialog(null, "Error al procesar la fila " + (i + 1) + ": " + ex.getMessage());
            }
        }

        if (exito) {
            JOptionPane.showMessageDialog(null, "Cambios guardados exitosamente.");
        }
        cargarTablaInventario();
    }

    public void buscar() {
        String terminoABuscar = JOptionPane.showInputDialog(null, "Ingrese el término de búsqueda:");

        if (terminoABuscar != null && !terminoABuscar.trim().isEmpty()) {
            List<InventarioModel> resultados = InventarioController.buscarInventarioPorTermino(terminoABuscar.trim());

            DefaultTableModel modeloTabla = (DefaultTableModel) tblinventario.getModel();
            modeloTabla.setRowCount(0);

            if (!resultados.isEmpty()) {
                for (InventarioModel ingrediente : resultados) {
                    Object[] fila = {
                        ingrediente.getIdIngrediente(),
                        ingrediente.getIngrediente(),
                        ingrediente.getTipoUso(),
                        ingrediente.getCantidad()
                    };
                    modeloTabla.addRow(fila);
                }
            } else {
                JOptionPane.showMessageDialog(null, "No se encontraron ingredientes que coincidan con la búsqueda.");
                cargarTablaInventario();
            }
        } else {
            cargarTablaInventario();
        }
    }

    public void modificar() {
        if (tblinventario.isEditing()) {
            tblinventario.getCellEditor().stopCellEditing();
        }
        int filaSeleccionada = tblinventario.getSelectedRow();

        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione una fila para modificar.");
            return;
        }

        try {
            int idIngrediente = (int) tblinventario.getValueAt(filaSeleccionada, 0);
            String ingrediente = tblinventario.getValueAt(filaSeleccionada, 1).toString();
            String tipoUso = tblinventario.getValueAt(filaSeleccionada, 2).toString();

            // Conversión de String a int para la cantidad
            String cantidadStr = tblinventario.getValueAt(filaSeleccionada, 3).toString();
            int cantidad = Integer.parseInt(cantidadStr);

            InventarioModel ingredienteModificado = new InventarioModel(idIngrediente, ingrediente, tipoUso, cantidad);
            boolean modificado = InventarioController.modificarIngrediente(ingredienteModificado);

            if (modificado) {
                JOptionPane.showMessageDialog(null, "Ingrediente modificado exitosamente.");
            } else {
                JOptionPane.showMessageDialog(null, "Error al modificar el ingrediente.");
            }
            cargarTablaInventario();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error. Asegúrese de que los datos son correctos.");
        }
    }

    public void agregar() {
        DefaultTableModel modeloTabla = (DefaultTableModel) tblinventario.getModel();
        Object[] filaVacia = new Object[modeloTabla.getColumnCount()];
        modeloTabla.addRow(filaVacia);
    }

    public void eliminar() {
        int filaSeleccionada = tblinventario.getSelectedRow();

        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione un ingrediente para eliminarlo.");
            return;
        }

        int confirmacion = JOptionPane.showConfirmDialog(null, "¿Está seguro de que desea eliminar este ingrediente?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);

        if (confirmacion == JOptionPane.YES_OPTION) {
            try {
                int idIngrediente = (int) tblinventario.getValueAt(filaSeleccionada, 0);
                boolean eliminado = InventarioController.eliminarIngrediente(idIngrediente);

                if (eliminado) {
                    JOptionPane.showMessageDialog(null, "Ingrediente eliminado exitosamente.");
                    cargarTablaInventario();
                } else {
                    JOptionPane.showMessageDialog(null, "Error al eliminar el ingrediente de la base de datos.");
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Ocurrió un error. No se pudo eliminar el ingrediente.");
                System.err.println("Error al eliminar ingrediente: " + ex.getMessage());
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnatras;
    private javax.swing.JButton btnbuscar;
    private javax.swing.JButton btneliminar1;
    private javax.swing.JButton btnguardar;
    private javax.swing.JButton btnguardar1;
    private javax.swing.JButton btnmodificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblinventario;
    // End of variables declaration//GEN-END:variables
}
